@model TicketVerkoop.ViewModels.MatchSectionInfoVM

@{
    ViewData["Title"] = "Sections";
}

<h1>Sections</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Sections">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="maxNumberOfTickets" data-max="@Model.MaxNumberOfTickets"></div>
            <div class="form-group">
                <label asp-for="NumberOfTickets" class="control-label"></label>
                <input asp-for="NumberOfTickets" class="form-control" />
                <span asp-validation-for="NumberOfTickets" class="text-danger"></span>
                <span asp-validation-for="SelectedMatchSectionId" class="text-danger"></span>
                @*<span class="text-danger" style="display:none" id="errorNotInt">Gelieve een geheel getal in te geven.</span>
                <span class="text-danger" style="display:none" id="errorOutOfBounds">Het maximaal aantal tickets dat u kunt kopen: </span>*@
            </div>
            <div style="visibility:hidden; height:0px; margin:0px; padding:0px;">
                <input asp-for="SelectedMatchSectionId" class="form-control" /> @*style="visibility:hidden"*@
                @*<span asp-validation-for="SelectedMatchSectionId" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <input type="submit" value="Reservate" class="btn btn-primary" id="reservateButton" asp-route-match="@Model.MatchId" />
            </div>
        </form>
    </div>
</div>

@if (Model.MatchSections != null)
{
    <div>
        <ul id="sections">
            @foreach (var item in Model.MatchSections)
            {
                @await Html.PartialAsync("DisplayTemplates/_SectionView", item)

            }
        </ul>
    </div>
}




@section Scripts{

    @*client side validation*@
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(() => {
            let matchSectionId = "";

            let tickets = 0;

            $("#sections .sectionTile").on("click", (event) => {
                let section = $(event.target).closest(".sectionTile");
                $("#sections .sectionTile").removeClass("selected");
                section.addClass("selected");

                matchSectionId = section.data("id");
                $("#SelectedMatchSectionId").attr("value", matchSectionId)
            });

            $("#reservateButton").on("click", () => {
                let ticketsString = $("#NumberOfTickets").val();
                tickets = parseFloat(ticketsString);
                if (Number.isInteger(tickets)) {
                    $("#errorNotInt").css("display", "none");
                    let maxNumberOfTickets = $("#maxNumberOfTickets").data("max");

                    if (tickets > 0 && tickets <= maxNumberOfTickets) {
                        $("#errorOutOfBounds").css("display", "none");
                        //No error;
                    } else {
                        //out of bounds
                        $("#errorOutOfBounds").css("display", "inline");
                    }
                }
                else {
                    //not an int
                    $("#errorNotInt").css("display", "inline");
                }

                
            })


        });
    </script>
}